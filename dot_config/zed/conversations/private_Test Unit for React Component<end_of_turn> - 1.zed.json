{"id":"6ceaf960-d315-444b-938a-8ff973bc7925","zed":"context","version":"0.3.0","text":"\nEres un experto en lenguajes de programacion y tu objetivo es asistir a la persona que te demanda ayuda, mejoras, o soluciones a sus problemas en codigo. La lista de lenguajes de programacion que conoces es la siguiente: Typescript, Javascript. Como asi eres experto en creacion de test unitarias con vitest y cypress.\n\nLas respuestas tienen que ser concisas y claras, y si es necesario, debes explicar el porque de tu respuesta. Recuerda siempre responder con codigo y no solo explicarle al usuario como podria hacerlo.\nNecesito test unitarias para este componente de react: ```tsx\nimport { CheckCircleOutline, PauseCircleOutline } from '@mui/icons-material'\nimport dayjs from 'dayjs'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nimport { Tag } from '../../../../../../components/common/Tag/Tag'\nimport { BenefitFundsIcon } from '../../../components/BenefitFundsIcon/BenefitFundsIcon'\nimport { isGiftCardFundType } from '../../../utils/benefitFund'\nimport { usePageBenefitFundsDetail } from '../usePageBenefitFundsDetail'\nimport { Metas } from './Metas/Metas'\n\nexport const Summary = () => {\n  const { t } = useTranslation()\n  const { benefitFundDetails } = usePageBenefitFundsDetail()\n\n  const isFinished = benefitFundDetails?.end_date\n    ? dayjs().subtract(1, 'day').isAfter(dayjs(benefitFundDetails.end_date))\n    : false\n\n  return (\n    <>\n      {benefitFundDetails && (\n        <div className='flex flex-col gap-2'>\n          <BenefitFundsIcon\n            color={benefitFundDetails.color}\n            icon={benefitFundDetails.emoji}\n          />\n          <div className='flex items-center gap-2'>\n            <h1 className='text-2xl font-semibold text-slate-900'>\n              {benefitFundDetails?.name}\n            </h1>\n            {isGiftCardFundType(benefitFundDetails.fund_type) && (\n              <Tag\n                text={t('admin.benefitFunds.detail.summary.fundType.label')}\n              />\n            )}\n            {benefitFundDetails.distribution_suspended && (\n              <Tag\n                color='red'\n                leftIcon={PauseCircleOutline}\n                text={t(\n                  'admin.benefitFunds.detail.summary.distribution.suspended'\n                )}\n              />\n            )}\n            {isFinished && (\n              <Tag\n                color='leeto-blue'\n                leftIcon={CheckCircleOutline}\n                text={t(\n                  'admin.benefitFunds.detail.summary.distribution.finished'\n                )}\n              />\n            )}\n          </div>\n          <Metas benefitFundDetails={benefitFundDetails} />\n        </div>\n      )}\n    </>\n  )\n}\n\n```","messages":[{"id":0,"start":0},{"id":1,"start":522}],"message_metadata":{"0":{"role":"system","status":"Done"},"1":{"role":"user","status":"Done"},"2":{"role":"assistant","status":"Done"},"3":{"role":"user","status":"Done"}},"summary":"Test Unit for React Component<end_of_turn>","slash_command_output_sections":[{"range":{"start":0,"end":521},"icon":"Library","label":"Default"},{"range":{"start":1,"end":521},"icon":"Library","label":"Coder "}]}